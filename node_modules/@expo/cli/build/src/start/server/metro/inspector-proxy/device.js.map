{"version":3,"sources":["../../../../../../src/start/server/metro/inspector-proxy/device.ts"],"sourcesContent":["import type { DebuggerInfo, Device as MetroDevice } from 'metro-inspector-proxy';\nimport fetch from 'node-fetch';\nimport type WS from 'ws';\n\nimport { MetroBundlerDevServer } from '../MetroBundlerDevServer';\nimport { DebuggerScriptSourceHandler } from './handlers/DebuggerScriptSource';\nimport { NetworkResponseHandler } from './handlers/NetworkResponse';\nimport { PageReloadHandler } from './handlers/PageReload';\nimport { VscodeCompatHandler } from './handlers/VscodeCompat';\nimport { DeviceRequest, InspectorHandler, DebuggerRequest } from './handlers/types';\n\nexport function createInspectorDeviceClass(\n  metroBundler: MetroBundlerDevServer,\n  MetroDeviceClass: typeof MetroDevice\n) {\n  return class ExpoInspectorDevice extends MetroDeviceClass implements InspectorHandler {\n    /** All handlers that should be used to intercept or reply to CDP events */\n    public handlers: InspectorHandler[] = [\n      new NetworkResponseHandler(),\n      new DebuggerScriptSourceHandler(this),\n      new PageReloadHandler(metroBundler),\n      new VscodeCompatHandler(),\n    ];\n\n    onDeviceMessage(message: any, info: DebuggerInfo): boolean {\n      return this.handlers.some((handler) => handler.onDeviceMessage?.(message, info) ?? false);\n    }\n\n    onDebuggerMessage(message: any, info: DebuggerInfo): boolean {\n      return this.handlers.some((handler) => handler.onDebuggerMessage?.(message, info) ?? false);\n    }\n\n    /** Hook into the message life cycle to answer more complex CDP messages */\n    async _processMessageFromDevice(message: DeviceRequest<any>, info: DebuggerInfo) {\n      if (!this.onDeviceMessage(message, info)) {\n        await super._processMessageFromDevice(message, info);\n      }\n    }\n\n    /** Hook into the message life cycle to answer more complex CDP messages */\n    _interceptMessageFromDebugger(\n      request: DebuggerRequest,\n      info: DebuggerInfo,\n      socket: WS\n    ): boolean {\n      // Note, `socket` is the exact same as `info.socket`\n      if (this.onDebuggerMessage(request, info)) {\n        return true;\n      }\n\n      return super._interceptMessageFromDebugger(request, info, socket);\n    }\n\n    /**\n     * Overwrite the default text fetcher, to load sourcemaps from sources other than `localhost`.\n     * @todo Cedric: remove the custom `DebuggerScriptSource` handler when switching over to `metro@>=0.75.1`\n     * @see https://github.com/facebook/metro/blob/77f445f1bcd2264ad06174dbf8d542bc75834d29/packages/metro-inspector-proxy/src/Device.js#L573-L588\n     * @since metro-inspector-proxy@0.75.1\n     */\n    async _fetchText(url: URL): Promise<string> {\n      const LENGTH_LIMIT_BYTES = 350_000_000; // 350mb\n\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`Received status ${response.status} while fetching: ${url}`);\n      }\n\n      const contentLength = response.headers.get('Content-Length');\n      if (contentLength && Number(contentLength) > LENGTH_LIMIT_BYTES) {\n        throw new Error('Expected file size is too large (more than 350mb)');\n      }\n\n      const text = await response.text();\n      if (Buffer.byteLength(text, 'utf8') > LENGTH_LIMIT_BYTES) {\n        throw new Error('File size is too large (more than 350mb)');\n      }\n\n      return text;\n    }\n  };\n}\n"],"names":["createInspectorDeviceClass","metroBundler","MetroDeviceClass","ExpoInspectorDevice","handlers","NetworkResponseHandler","DebuggerScriptSourceHandler","PageReloadHandler","VscodeCompatHandler","onDeviceMessage","message","info","handler","some","onDebuggerMessage","_processMessageFromDevice","_interceptMessageFromDebugger","request","socket","_fetchText","url","LENGTH_LIMIT_BYTES","response","fetch","ok","Error","status","contentLength","headers","get","Number","text","Buffer","byteLength"],"mappings":"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"}